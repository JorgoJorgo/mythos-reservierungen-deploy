{"ast":null,"code":"var _jsxFileName = \"/home/jorgo/Desktop/MythosReservierungsTool/reservations-frontend/src/components/ReservationList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReservationList = ({\n  selectedDate\n}) => {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  useEffect(() => {\n    fetchReservations(selectedDate);\n  }, [selectedDate]);\n  const fetchReservations = async selectedDate => {\n    try {\n      const formattedDate = formatDate(selectedDate); // Funktion, die das Datum formatiert\n      //console.log(\"[ReservationList fetchReservations] selectedDate :\", selectedDate)\n      //console.log(\"[ReservationList fetchReservations] formattedDate :\", formattedDate)\n      const token = localStorage.getItem('token');\n      const response2 = await fetch(`http://localhost:5000/api/reservations/dailyReservation?date=${selectedDate}`, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      console.log(\"[ReservationList fetchReservations] response2 : \", response2);\n      const response = await fetch(`http://localhost:5000/api/reservations/dailyReservation?date=${formattedDate}`, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      console.log(\"[ReservationList fetchReservations] response : \", response);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setReservations(data);\n    } catch (error) {\n      console.error('Error fetching reservations:', error);\n    }\n  };\n  const formatDate = date => {\n    const d = new Date(date);\n    const formattedDate = `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n    return formattedDate;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reservation-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Reservierungen f\\xFCr \", formatDate(selectedDate)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      children: reservations.length > 0 ? reservations.map(reservation => /*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: reservation.id,\n        id: reservation.id,\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n          children: [\"Zeit: \", reservation.time, \", Kunde: \", reservation.customer_name, \", Personen: \", reservation.guest_count, \", Datum: \", formatDate(reservation.date)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Zeit: \", reservation.time, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Kunde: \", reservation.customer_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" G\\xE4ste: \", reservation.guest_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Tisch: \", reservation.table_number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Telefon: \", reservation.phone_number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Mitarbeiter: \", reservation.employee_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Reservation ID: \", reservation.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }, this)]\n      }, reservation.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Keine Reservierungen f\\xFCr dieses Datum.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ReservationList, \"n1GCS9VJe9p98Kw6tsz1Wmk1YmA=\");\n_c = ReservationList;\nexport default ReservationList;\nvar _c;\n$RefreshReg$(_c, \"ReservationList\");","map":{"version":3,"names":["React","useState","useEffect","Accordion","jsxDEV","_jsxDEV","ReservationList","selectedDate","_s","reservations","setReservations","fetchReservations","formattedDate","formatDate","token","localStorage","getItem","response2","fetch","headers","console","log","response","ok","Error","data","json","error","date","d","Date","getDate","getMonth","getFullYear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","reservation","Item","eventKey","id","Header","time","customer_name","guest_count","Body","table_number","phone_number","employee_name","_c","$RefreshReg$"],"sources":["/home/jorgo/Desktop/MythosReservierungsTool/reservations-frontend/src/components/ReservationList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\n\nconst ReservationList = ({ selectedDate }) => {\n  const [reservations, setReservations] = useState([]);\n\n  useEffect(() => {\n    fetchReservations(selectedDate);\n  }, [selectedDate]);\n\n  const fetchReservations = async (selectedDate) => {\n    try {\n      const formattedDate = formatDate(selectedDate); // Funktion, die das Datum formatiert\n      //console.log(\"[ReservationList fetchReservations] selectedDate :\", selectedDate)\n      //console.log(\"[ReservationList fetchReservations] formattedDate :\", formattedDate)\n      const token = localStorage.getItem('token');\n      const response2 = await fetch(`http://localhost:5000/api/reservations/dailyReservation?date=${selectedDate}`, {\n        headers: {\n          'x-auth-token': token,\n        },\n      });\n      console.log(\"[ReservationList fetchReservations] response2 : \", response2)\n      const response = await fetch(`http://localhost:5000/api/reservations/dailyReservation?date=${formattedDate}`, {\n        headers: {\n          'x-auth-token': token,\n        },\n      });\n      console.log(\"[ReservationList fetchReservations] response : \", response)\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setReservations(data);\n    } catch (error) {\n      console.error('Error fetching reservations:', error);\n    }\n  };\n\n  const formatDate = (date) => {\n    const d = new Date(date);\n    const formattedDate = `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n    return formattedDate;\n  };\n\n  return (\n    <div className=\"reservation-list\">\n      <h2>Reservierungen für {formatDate(selectedDate)}</h2>\n        <Accordion>\n        {reservations.length > 0 ? (\n              reservations.map((reservation) => (\n                <Accordion.Item eventKey={reservation.id} id={reservation.id} key={reservation.id}>\n                  <Accordion.Header>Zeit: {reservation.time}, Kunde: {reservation.customer_name}, Personen: {reservation.guest_count}, Datum: {formatDate(reservation.date)}</Accordion.Header>\n                  <Accordion.Body>\n                  <p>Zeit: {reservation.time} </p> \n                  <p>Kunde: {reservation.customer_name}</p>\n                  <p> Gäste: {reservation.guest_count}</p>\n                  <p>Tisch: {reservation.table_number}</p> \n                  <p>Telefon: {reservation.phone_number}</p>\n                  <p>Mitarbeiter: {reservation.employee_name}</p> \n                  <p>Reservation ID: {reservation.id}</p>\n                  </Accordion.Body>\n                </Accordion.Item>\n              ))\n            ) : (\n              <p>Keine Reservierungen für dieses Datum.</p>\n            )}\n        </Accordion>\n          {/* <ul>\n            {reservations.length > 0 ? (\n              reservations.map((reservation) => (\n                <li key={reservation.id}>\n                  <p>Zeit: {reservation.time}, Kunde: {reservation.customer_name}</p>\n                  <p>Mitarbeiter: {reservation.employee_name}, Gäste: {reservation.guest_count}</p>\n                  <p>Tisch: {reservation.table_number}, Telefon: {reservation.phone_number}</p>\n                </li>\n              ))\n            ) : (\n              <p>Keine Reservierungen für dieses Datum.</p>\n            )}\n          </ul> */}\n    </div>\n  );\n};\n\nexport default ReservationList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}