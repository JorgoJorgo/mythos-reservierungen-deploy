{"ast":null,"code":"var _jsxFileName = \"/home/jorgo/Desktop/MythosReservierungsTool/reservations-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport ReservationForm from './components/ReservationForm';\nimport ReservationList from './components/ReservationList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [reservations, setReservations] = useState([]);\n  const fetchReservations = async selectedDate => {\n    try {\n      const formattedDate = formatDate(selectedDate); // Funktion, die das Datum formatiert\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:5000/api/reservations?date=${formattedDate}`, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setReservations(data);\n    } catch (error) {\n      console.error('Error fetching reservations:', error);\n    }\n  };\n  useEffect(() => {\n    fetchReservations(date);\n  }, [date]);\n  const formatDate = date => {\n    const d = new Date(date);\n    const formattedDate = `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n    return formattedDate;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reservierungssystem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: setDate,\n        value: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reservations-list\",\n      children: /*#__PURE__*/_jsxDEV(ReservationList, {\n        selectedDate: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReservationForm, {\n      selectedDate: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kZh3l5vuSrIgm6r2PoZvWpY22rc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","ReservationForm","ReservationList","jsxDEV","_jsxDEV","App","_s","date","setDate","Date","reservations","setReservations","fetchReservations","selectedDate","formattedDate","formatDate","token","localStorage","getItem","response","fetch","headers","ok","Error","data","json","error","console","d","getDate","getMonth","getFullYear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","_c","$RefreshReg$"],"sources":["/home/jorgo/Desktop/MythosReservierungsTool/reservations-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport ReservationForm from './components/ReservationForm';\nimport ReservationList from './components/ReservationList';\nimport './App.css';\n\nfunction App() {\n  const [date, setDate] = useState(new Date());\n  const [reservations, setReservations] = useState([]);\n\n  const fetchReservations = async (selectedDate) => {\n    try {\n      const formattedDate = formatDate(selectedDate); // Funktion, die das Datum formatiert\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:5000/api/reservations?date=${formattedDate}`, {\n        headers: {\n          'x-auth-token': token,\n        },\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setReservations(data);\n    } catch (error) {\n      console.error('Error fetching reservations:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchReservations(date);\n  }, [date]);\n\n  const formatDate = (date) => {\n    const d = new Date(date);\n    const formattedDate = `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n    return formattedDate;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Reservierungssystem</h1>\n      <div className=\"calendar-container\">\n        <Calendar\n          onChange={setDate}\n          value={date}\n        />\n      </div>\n      <div className=\"reservations-list\">\n        <ReservationList selectedDate={date} />\n      </div>\n      <ReservationForm selectedDate={date} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}