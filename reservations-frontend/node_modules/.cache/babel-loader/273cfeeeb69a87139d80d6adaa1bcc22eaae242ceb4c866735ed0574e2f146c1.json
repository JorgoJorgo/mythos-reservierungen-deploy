{"ast":null,"code":"var _jsxFileName = \"/home/jorgo/Desktop/MythosReservierungsTool/reservations-frontend/src/components/ReservationList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport './ReservationList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReservationList = ({\n  selectedDate\n}) => {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  useEffect(() => {\n    fetchReservations(selectedDate);\n  }, [selectedDate]);\n  const fetchReservations = async selectedDate => {\n    try {\n      const formattedDate = formatDate(selectedDate); // Funktion, die das Datum formatiert\n      const token = sessionStorage.getItem('token');\n      const response = await fetch(`http://localhost:5000/api/reservations/dailyReservation?date=${formattedDate}`, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      console.log(\"[ReservationList fetchReservations] response : \", response);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setReservations(data);\n    } catch (error) {\n      console.error('Error fetching reservations:', error);\n    }\n  };\n  const formatDate = date => {\n    const d = new Date(date);\n    const formattedDate = `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n    return formattedDate;\n  };\n\n  // Funktion zum Löschen einer Reservierung\n  const handleDelete = async reservationId => {\n    try {\n      const token = sessionStorage.getItem('token');\n      const response = await fetch(`http://localhost:5000/api/reservations/${reservationId}`, {\n        method: 'DELETE',\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      if (response.ok) {\n        // Reservierung erfolgreich gelöscht, Liste aktualisieren\n        setReservations(reservations.filter(reservation => reservation.id !== reservationId));\n        alert('Reservierung erfolgreich gelöscht!');\n      } else {\n        throw new Error('Error deleting reservation');\n      }\n    } catch (error) {\n      console.error('Error deleting reservation:', error);\n      alert('Es gab ein Problem beim Löschen der Reservierung.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reservation-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Reservierungen f\\xFCr \", formatDate(selectedDate)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      children: reservations.length > 0 ? reservations.map(reservation => /*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: reservation.id,\n        id: reservation.id,\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n          children: [\"Zeit: \", reservation.time, \", Kunde: \", reservation.customer_name, \", Personen: \", reservation.guest_count, \", Datum: \", formatDate(reservation.date)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Zeit: \", reservation.time, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Kunde: \", reservation.customer_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"G\\xE4ste: \", reservation.guest_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Tisch: \", reservation.table_number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Telefon: \", reservation.phone_number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Mitarbeiter: \", reservation.employee_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Reservation ID: \", reservation.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"warning\",\n              children: \"Bearbeiten\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => handleDelete(reservation.id),\n              children: \"L\\xF6schen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }, this)]\n      }, reservation.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Keine Reservierungen f\\xFCr dieses Datum.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(ReservationList, \"n1GCS9VJe9p98Kw6tsz1Wmk1YmA=\");\n_c = ReservationList;\nexport default ReservationList;\nvar _c;\n$RefreshReg$(_c, \"ReservationList\");","map":{"version":3,"names":["React","useState","useEffect","Accordion","Button","jsxDEV","_jsxDEV","ReservationList","selectedDate","_s","reservations","setReservations","fetchReservations","formattedDate","formatDate","token","sessionStorage","getItem","response","fetch","headers","console","log","ok","Error","data","json","error","date","d","Date","getDate","getMonth","getFullYear","handleDelete","reservationId","method","filter","reservation","id","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","Item","eventKey","Header","time","customer_name","guest_count","Body","table_number","phone_number","employee_name","variant","onClick","_c","$RefreshReg$"],"sources":["/home/jorgo/Desktop/MythosReservierungsTool/reservations-frontend/src/components/ReservationList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport './ReservationList.css';\n\nconst ReservationList = ({ selectedDate }) => {\n  const [reservations, setReservations] = useState([]);\n\n  useEffect(() => {\n    fetchReservations(selectedDate);\n  }, [selectedDate]);\n\n  const fetchReservations = async (selectedDate) => {\n    try {\n      const formattedDate = formatDate(selectedDate); // Funktion, die das Datum formatiert\n      const token = sessionStorage.getItem('token');\n      \n      const response = await fetch(`http://localhost:5000/api/reservations/dailyReservation?date=${formattedDate}`, {\n        headers: {\n          'x-auth-token': token,\n        },\n      });\n      console.log(\"[ReservationList fetchReservations] response : \", response);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setReservations(data);\n    } catch (error) {\n      console.error('Error fetching reservations:', error);\n    }\n  };\n\n  const formatDate = (date) => {\n    const d = new Date(date);\n    const formattedDate = `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n    return formattedDate;\n  };\n\n  // Funktion zum Löschen einer Reservierung\n  const handleDelete = async (reservationId) => {\n    try {\n      const token = sessionStorage.getItem('token');\n      const response = await fetch(`http://localhost:5000/api/reservations/${reservationId}`, {\n        method: 'DELETE',\n        headers: {\n          'x-auth-token': token,\n        },\n      });\n\n      if (response.ok) {\n        // Reservierung erfolgreich gelöscht, Liste aktualisieren\n        setReservations(reservations.filter(reservation => reservation.id !== reservationId));\n        alert('Reservierung erfolgreich gelöscht!');\n      } else {\n        throw new Error('Error deleting reservation');\n      }\n    } catch (error) {\n      console.error('Error deleting reservation:', error);\n      alert('Es gab ein Problem beim Löschen der Reservierung.');\n    }\n  };\n\n  return (\n    <div className=\"reservation-list\">\n      <hr></hr>\n      <h2>Reservierungen für {formatDate(selectedDate)}</h2>\n        <Accordion>\n        {reservations.length > 0 ? (\n              reservations.map((reservation) => (\n                <Accordion.Item eventKey={reservation.id} id={reservation.id} key={reservation.id}>\n                  <Accordion.Header>\n                    Zeit: {reservation.time}, Kunde: {reservation.customer_name}, Personen: {reservation.guest_count}, Datum: {formatDate(reservation.date)}\n                  </Accordion.Header>\n                  <Accordion.Body>\n                    <p>Zeit: {reservation.time} </p> \n                    <p>Kunde: {reservation.customer_name}</p>\n                    <p>Gäste: {reservation.guest_count}</p>\n                    <p>Tisch: {reservation.table_number}</p> \n                    <p>Telefon: {reservation.phone_number}</p>\n                    <p>Mitarbeiter: {reservation.employee_name}</p> \n                    <p>Reservation ID: {reservation.id}</p>\n                    \n                    {/* Container für die Buttons */}\n                    <div className=\"button-container\">\n                      <Button variant=\"warning\">Bearbeiten</Button>\n                      <Button \n                        variant=\"danger\" \n                        onClick={() => handleDelete(reservation.id)}\n                      >\n                        Löschen\n                      </Button>\n                    </div>\n                  </Accordion.Body>\n                </Accordion.Item>\n              ))\n            ) : (\n              <p>Keine Reservierungen für dieses Datum.</p>\n            )}\n        </Accordion>\n        <hr></hr>\n    </div>\n  );\n};\n\nexport default ReservationList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdU,iBAAiB,CAACJ,YAAY,CAAC;EACjC,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,MAAMI,iBAAiB,GAAG,MAAOJ,YAAY,IAAK;IAChD,IAAI;MACF,MAAMK,aAAa,GAAGC,UAAU,CAACN,YAAY,CAAC,CAAC,CAAC;MAChD,MAAMO,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;MAE7C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAgEN,aAAa,EAAE,EAAE;QAC5GO,OAAO,EAAE;UACP,cAAc,EAAEL;QAClB;MACF,CAAC,CAAC;MACFM,OAAO,CAACC,GAAG,CAAC,iDAAiD,EAAEJ,QAAQ,CAAC;MACxE,IAAI,CAACA,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCf,eAAe,CAACc,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAMb,UAAU,GAAIc,IAAI,IAAK;IAC3B,MAAMC,CAAC,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;IACxB,MAAMf,aAAa,GAAG,GAAGgB,CAAC,CAACE,OAAO,CAAC,CAAC,IAAIF,CAAC,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAIH,CAAC,CAACI,WAAW,CAAC,CAAC,EAAE;IAC7E,OAAOpB,aAAa;EACtB,CAAC;;EAED;EACA,MAAMqB,YAAY,GAAG,MAAOC,aAAa,IAAK;IAC5C,IAAI;MACF,MAAMpB,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;MAC7C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0CgB,aAAa,EAAE,EAAE;QACtFC,MAAM,EAAE,QAAQ;QAChBhB,OAAO,EAAE;UACP,cAAc,EAAEL;QAClB;MACF,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACK,EAAE,EAAE;QACf;QACAZ,eAAe,CAACD,YAAY,CAAC2B,MAAM,CAACC,WAAW,IAAIA,WAAW,CAACC,EAAE,KAAKJ,aAAa,CAAC,CAAC;QACrFK,KAAK,CAAC,oCAAoC,CAAC;MAC7C,CAAC,MAAM;QACL,MAAM,IAAIhB,KAAK,CAAC,4BAA4B,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDa,KAAK,CAAC,mDAAmD,CAAC;IAC5D;EACF,CAAC;EAED,oBACElC,OAAA;IAAKmC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BpC,OAAA;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTxC,OAAA;MAAAoC,QAAA,GAAI,wBAAmB,EAAC5B,UAAU,CAACN,YAAY,CAAC;IAAA;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpDxC,OAAA,CAACH,SAAS;MAAAuC,QAAA,EACThC,YAAY,CAACqC,MAAM,GAAG,CAAC,GAClBrC,YAAY,CAACsC,GAAG,CAAEV,WAAW,iBAC3BhC,OAAA,CAACH,SAAS,CAAC8C,IAAI;QAACC,QAAQ,EAAEZ,WAAW,CAACC,EAAG;QAACA,EAAE,EAAED,WAAW,CAACC,EAAG;QAAAG,QAAA,gBAC3DpC,OAAA,CAACH,SAAS,CAACgD,MAAM;UAAAT,QAAA,GAAC,QACV,EAACJ,WAAW,CAACc,IAAI,EAAC,WAAS,EAACd,WAAW,CAACe,aAAa,EAAC,cAAY,EAACf,WAAW,CAACgB,WAAW,EAAC,WAAS,EAACxC,UAAU,CAACwB,WAAW,CAACV,IAAI,CAAC;QAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvH,CAAC,eACnBxC,OAAA,CAACH,SAAS,CAACoD,IAAI;UAAAb,QAAA,gBACbpC,OAAA;YAAAoC,QAAA,GAAG,QAAM,EAACJ,WAAW,CAACc,IAAI,EAAC,GAAC;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAChCxC,OAAA;YAAAoC,QAAA,GAAG,SAAO,EAACJ,WAAW,CAACe,aAAa;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzCxC,OAAA;YAAAoC,QAAA,GAAG,YAAO,EAACJ,WAAW,CAACgB,WAAW;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvCxC,OAAA;YAAAoC,QAAA,GAAG,SAAO,EAACJ,WAAW,CAACkB,YAAY;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxCxC,OAAA;YAAAoC,QAAA,GAAG,WAAS,EAACJ,WAAW,CAACmB,YAAY;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1CxC,OAAA;YAAAoC,QAAA,GAAG,eAAa,EAACJ,WAAW,CAACoB,aAAa;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/CxC,OAAA;YAAAoC,QAAA,GAAG,kBAAgB,EAACJ,WAAW,CAACC,EAAE;UAAA;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAGvCxC,OAAA;YAAKmC,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/BpC,OAAA,CAACF,MAAM;cAACuD,OAAO,EAAC,SAAS;cAAAjB,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC7CxC,OAAA,CAACF,MAAM;cACLuD,OAAO,EAAC,QAAQ;cAChBC,OAAO,EAAEA,CAAA,KAAM1B,YAAY,CAACI,WAAW,CAACC,EAAE,CAAE;cAAAG,QAAA,EAC7C;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC;MAAA,GAvBgDR,WAAW,CAACC,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAwBjE,CACjB,CAAC,gBAEFxC,OAAA;QAAAoC,QAAA,EAAG;MAAsC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC7C;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,eACZxC,OAAA;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACrC,EAAA,CAlGIF,eAAe;AAAAsD,EAAA,GAAftD,eAAe;AAoGrB,eAAeA,eAAe;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}