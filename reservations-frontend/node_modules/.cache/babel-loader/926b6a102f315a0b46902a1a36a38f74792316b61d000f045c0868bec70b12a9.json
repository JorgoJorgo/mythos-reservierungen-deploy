{"ast":null,"code":"var _jsxFileName = \"/home/jorgo/Desktop/MythosReservierungsTool/reservations-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport ReservationForm from './components/ReservationForm';\nimport ReservationList from './components/ReservationList';\nimport LoginForm from './components/Login'; // Annahme: Komponente für das Login-Formular\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [reservations, setReservations] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false); // Zustand für den eingeloggten Zustand\n  const [user, setUser] = useState(null); // Zustand für Benutzerdaten\n\n  // Funktion zum Einloggen\n  const handleLogin = userData => {\n    // Hier normalerweise eine API-Anfrage zum Einloggen\n    // Nach erfolgreichem Einloggen Token im localStorage speichern\n    localStorage.setItem('token', userData.token);\n    setUser(userData.user); // Speichert Benutzerdaten im Zustand\n    setLoggedIn(true); // Benutzer als eingeloggt markieren\n  };\n\n  // Funktion zum Ausloggen\n  const handleLogout = () => {\n    localStorage.removeItem('token'); // Token aus localStorage entfernen\n    setUser(null); // Benutzerdaten im Zustand zurücksetzen\n    setLoggedIn(false); // Benutzer als ausgeloggt markieren\n  };\n\n  // const fetchReservations = async (selectedDate) => {\n  //   try {\n  //     const formattedDate = formatDate(selectedDate); // Funktion, die das Datum formatiert\n  //     console.log(\"[fetchReservations] selectedDate :\", selectedDate)\n  //     console.log(\"[fetchReservations] formattedDate :\", formattedDate)\n  //     const token = localStorage.getItem('token');\n  //     const response2 = await fetch(`http://localhost:5000/api/reservations?date=${selectedDate}`, {\n  //       headers: {\n  //         'x-auth-token': token,\n  //       },\n  //     });\n  //     console.log(\"[fetchReservations] response2 : \", response2)\n  //     const response = await fetch(`http://localhost:5000/api/reservations?date=${formattedDate}`, {\n  //       headers: {\n  //         'x-auth-token': token,\n  //       },\n  //     });\n  //     if (!response.ok) {\n  //       throw new Error('Network response was not ok');\n  //     }\n  //     const data = await response.json();\n  //     setReservations(data);\n  //   } catch (error) {\n  //     console.error('Error fetching reservations:', error);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   fetchReservations(date);\n  // }, [date]);\n\n  const formatDate = date => {\n    const d = new Date(date);\n    const formattedDate = `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n    return formattedDate;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reservierungssystem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-container\",\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: setDate,\n          value: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reservations-list\",\n        children: /*#__PURE__*/_jsxDEV(ReservationList, {\n          selectedDate: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reservation-form\",\n        children: /*#__PURE__*/_jsxDEV(ReservationForm, {\n          selectedDate: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(LoginForm, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"z6y5zriDrjyHli9UNWFT+6h6CAQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","ReservationForm","ReservationList","LoginForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","date","setDate","Date","reservations","setReservations","loggedIn","setLoggedIn","user","setUser","handleLogin","userData","localStorage","setItem","token","handleLogout","removeItem","formatDate","d","formattedDate","getDate","getMonth","getFullYear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","selectedDate","onClick","onLogin","_c","$RefreshReg$"],"sources":["/home/jorgo/Desktop/MythosReservierungsTool/reservations-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport ReservationForm from './components/ReservationForm';\nimport ReservationList from './components/ReservationList';\nimport LoginForm from './components/Login'; // Annahme: Komponente für das Login-Formular\nimport './App.css';\n\nfunction App() {\n  const [date, setDate] = useState(new Date());\n  const [reservations, setReservations] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false); // Zustand für den eingeloggten Zustand\n  const [user, setUser] = useState(null); // Zustand für Benutzerdaten\n\n  // Funktion zum Einloggen\n  const handleLogin = (userData) => {\n    // Hier normalerweise eine API-Anfrage zum Einloggen\n    // Nach erfolgreichem Einloggen Token im localStorage speichern\n    localStorage.setItem('token', userData.token);\n    setUser(userData.user); // Speichert Benutzerdaten im Zustand\n    setLoggedIn(true); // Benutzer als eingeloggt markieren\n  };\n\n  // Funktion zum Ausloggen\n  const handleLogout = () => {\n    localStorage.removeItem('token'); // Token aus localStorage entfernen\n    setUser(null); // Benutzerdaten im Zustand zurücksetzen\n    setLoggedIn(false); // Benutzer als ausgeloggt markieren\n  };\n\n  // const fetchReservations = async (selectedDate) => {\n  //   try {\n  //     const formattedDate = formatDate(selectedDate); // Funktion, die das Datum formatiert\n  //     console.log(\"[fetchReservations] selectedDate :\", selectedDate)\n  //     console.log(\"[fetchReservations] formattedDate :\", formattedDate)\n  //     const token = localStorage.getItem('token');\n  //     const response2 = await fetch(`http://localhost:5000/api/reservations?date=${selectedDate}`, {\n  //       headers: {\n  //         'x-auth-token': token,\n  //       },\n  //     });\n  //     console.log(\"[fetchReservations] response2 : \", response2)\n  //     const response = await fetch(`http://localhost:5000/api/reservations?date=${formattedDate}`, {\n  //       headers: {\n  //         'x-auth-token': token,\n  //       },\n  //     });\n  //     if (!response.ok) {\n  //       throw new Error('Network response was not ok');\n  //     }\n  //     const data = await response.json();\n  //     setReservations(data);\n  //   } catch (error) {\n  //     console.error('Error fetching reservations:', error);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   fetchReservations(date);\n  // }, [date]);\n\n  const formatDate = (date) => {\n    const d = new Date(date);\n    const formattedDate = `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n    return formattedDate;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Reservierungssystem</h1>\n      {loggedIn ? (\n        <>\n          <div className=\"calendar-container\">\n            <Calendar onChange={setDate} value={date} />\n          </div>\n          <div className=\"reservations-list\">\n            <ReservationList selectedDate={date} />\n          </div>\n          <div className=\"reservation-form\">\n            <ReservationForm selectedDate={date} />\n          </div>\n          <button onClick={handleLogout}>Logout</button>\n        </>\n      ) : (\n        <LoginForm onLogin={handleLogin} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}