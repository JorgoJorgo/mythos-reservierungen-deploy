{"ast":null,"code":"var _jsxFileName = \"/home/jorgo/Desktop/MythosReservierungsTool/reservations-frontend/src/components/ReservationList.js\",\n  _s = $RefreshSig$();\n// ReservationList.js\n\nimport React, { useState, useEffect } from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReservationList = ({\n  selectedDate\n}) => {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  useEffect(() => {\n    fetchReservations(selectedDate);\n  }, [selectedDate]);\n  const fetchReservations = async date => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/reservations?date=${date}`);\n      const data = await response.json();\n      // Reservierungen nach Uhrzeit sortieren (Beispiel: sortieren nach time)\n      const sortedReservations = data.sort((a, b) => a.time.localeCompare(b.time));\n      setReservations(sortedReservations);\n    } catch (error) {\n      console.error('Error fetching reservations:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reservation-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-3\",\n      children: [\"Reservierungen f\\xFCr \", selectedDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: reservations.length > 0 ? reservations.map(reservation => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Zeit: \", reservation.time, \", Kunde: \", reservation.customer_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Mitarbeiter: \", reservation.employee_name, \", G\\xE4ste: \", reservation.guest_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tisch: \", reservation.table_number, \", Telefon: \", reservation.phone_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)]\n      }, reservation.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: \"Keine Reservierungen f\\xFCr dieses Datum.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ReservationList, \"n1GCS9VJe9p98Kw6tsz1Wmk1YmA=\");\n_c = ReservationList;\nexport default ReservationList;\nvar _c;\n$RefreshReg$(_c, \"ReservationList\");","map":{"version":3,"names":["React","useState","useEffect","ListGroup","jsxDEV","_jsxDEV","ReservationList","selectedDate","_s","reservations","setReservations","fetchReservations","date","response","fetch","data","json","sortedReservations","sort","a","b","time","localeCompare","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","reservation","Item","customer_name","employee_name","guest_count","table_number","phone_number","id","_c","$RefreshReg$"],"sources":["/home/jorgo/Desktop/MythosReservierungsTool/reservations-frontend/src/components/ReservationList.js"],"sourcesContent":["// ReservationList.js\n\nimport React, { useState, useEffect } from 'react';\nimport { ListGroup } from 'react-bootstrap';\n\nconst ReservationList = ({ selectedDate }) => {\n  const [reservations, setReservations] = useState([]);\n\n  useEffect(() => {\n    fetchReservations(selectedDate);\n  }, [selectedDate]);\n\n  const fetchReservations = async (date) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/reservations?date=${date}`);\n      const data = await response.json();\n      // Reservierungen nach Uhrzeit sortieren (Beispiel: sortieren nach time)\n      const sortedReservations = data.sort((a, b) => a.time.localeCompare(b.time));\n      setReservations(sortedReservations);\n    } catch (error) {\n      console.error('Error fetching reservations:', error);\n    }\n  };\n\n  return (\n    <div className=\"reservation-list\">\n      <h2 className=\"text-center mb-3\">Reservierungen für {selectedDate}</h2>\n      <ListGroup>\n        {reservations.length > 0 ? (\n          reservations.map(reservation => (\n            <ListGroup.Item key={reservation.id}>\n              <p>Zeit: {reservation.time}, Kunde: {reservation.customer_name}</p>\n              <p>Mitarbeiter: {reservation.employee_name}, Gäste: {reservation.guest_count}</p>\n              <p>Tisch: {reservation.table_number}, Telefon: {reservation.phone_number}</p>\n            </ListGroup.Item>\n          ))\n        ) : (\n          <p className=\"text-center\">Keine Reservierungen für dieses Datum.</p>\n        )}\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default ReservationList;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdS,iBAAiB,CAACJ,YAAY,CAAC;EACjC,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,MAAMI,iBAAiB,GAAG,MAAOC,IAAI,IAAK;IACxC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+CF,IAAI,EAAE,CAAC;MACnF,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC;MACA,MAAMC,kBAAkB,GAAGF,IAAI,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,IAAI,CAACC,aAAa,CAACF,CAAC,CAACC,IAAI,CAAC,CAAC;MAC5EX,eAAe,CAACO,kBAAkB,CAAC;IACrC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,oBACElB,OAAA;IAAKoB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BrB,OAAA;MAAIoB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,GAAC,wBAAmB,EAACnB,YAAY;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvEzB,OAAA,CAACF,SAAS;MAAAuB,QAAA,EACPjB,YAAY,CAACsB,MAAM,GAAG,CAAC,GACtBtB,YAAY,CAACuB,GAAG,CAACC,WAAW,iBAC1B5B,OAAA,CAACF,SAAS,CAAC+B,IAAI;QAAAR,QAAA,gBACbrB,OAAA;UAAAqB,QAAA,GAAG,QAAM,EAACO,WAAW,CAACZ,IAAI,EAAC,WAAS,EAACY,WAAW,CAACE,aAAa;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnEzB,OAAA;UAAAqB,QAAA,GAAG,eAAa,EAACO,WAAW,CAACG,aAAa,EAAC,cAAS,EAACH,WAAW,CAACI,WAAW;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjFzB,OAAA;UAAAqB,QAAA,GAAG,SAAO,EAACO,WAAW,CAACK,YAAY,EAAC,aAAW,EAACL,WAAW,CAACM,YAAY;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAH1DG,WAAW,CAACO,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAInB,CACjB,CAAC,gBAEFzB,OAAA;QAAGoB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAsC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACrE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACtB,EAAA,CArCIF,eAAe;AAAAmC,EAAA,GAAfnC,eAAe;AAuCrB,eAAeA,eAAe;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}